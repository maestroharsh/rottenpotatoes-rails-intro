class MoviesController < ApplicationController

  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end
  def index_validate_params? params
    session[:ratings] = params[:ratings] if !params[:ratings].nil?
    session[:sortBy] = params[:sortBy] if !params[:sortBy].nil?
    !((params[:ratings].nil? && session[:ratings]!=[] && !session[:ratings].nil?) || 
        (params[:sortBy].nil? && !session[:sortBy].nil?))
  end
  def index
    unless index_validate_params? params
      flash.keep
      redirect_to(movies_path( 
        :ratings => session[:ratings], 
        :sortBy => session[:sortBy]))
    end
    sort = params[:sort]
    order = params[:order]
    @order = (order.nil? || order == 'desc') ? 'asc' : 'desc'

    @all_ratings = Movie.all_ratings
    ratings = params[:ratings]
    @ratings = ratings.nil? ? Movie.all_ratings : ratings.keys
    @movies = Movie.order("#{sort} #{order}").where('rating IN (?)', @ratings).all
  end

  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(user_params)
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end
 def user_params
    params.require(:movie).permit(:Title, :Rating, :ReleasedOn )
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(user_params)
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
